{"version":3,"file":"jsmind.screenshot.js","sources":["../src/plugins/jsmind.screenshot.js"],"sourcesContent":["/**\n * @license BSD\n * @copyright 2014-2025 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport jsMind from 'jsmind';\nimport domtoimage from 'dom-to-image';\n\nif (!jsMind) {\n    throw new Error('jsMind is not defined');\n}\n\nif (!domtoimage) {\n    throw new Error('dom-to-image is required');\n}\n\nconst $ = jsMind.$;\n\n/**\n * Default options for screenshot plugin.\n * @typedef {Object} ScreenshotOptions\n * @property {string|null} [filename]\n * @property {{left?:string|Location,right?:string}} [watermark]\n * @property {string} [background]\n */\nconst DEFAULT_OPTIONS = {\n    filename: null,\n    watermark: {\n        left: $.w.location,\n        right: 'https://github.com/hizzgdev/jsmind',\n    },\n    background: 'transparent',\n};\n\n/**\n * Screenshot plugin for jsMind.\n */\nexport class JmScreenshot {\n    /**\n     * Create screenshot plugin instance.\n     * @param {import('../jsmind.js').default} jm - jsMind instance\n     * @param {Partial<ScreenshotOptions>} options - Plugin options\n     */\n    constructor(jm, options) {\n        var opts = {};\n        jsMind.util.json.merge(opts, DEFAULT_OPTIONS);\n        jsMind.util.json.merge(opts, options);\n\n        this.version = '0.2.0';\n        /** @type {import('../jsmind.js').default} */\n        this.jm = jm;\n        /** @type {ScreenshotOptions} */\n        this.options = opts;\n        /** @type {number} */\n        this.dpr = jm.view.device_pixel_ratio;\n    }\n\n    /** Take a screenshot of the mind map. */\n    shoot() {\n        let c = this.create_canvas();\n        let ctx = c.getContext('2d');\n        ctx.scale(this.dpr, this.dpr);\n        Promise.resolve(ctx)\n            .then(() => this.draw_background(ctx))\n            .then(() => this.draw_lines(ctx))\n            .then(() => this.draw_nodes(ctx))\n            .then(() => this.draw_watermark(c, ctx))\n            .then(() => this.download(c))\n            .then(() => this.clear(c));\n    }\n\n    /**\n     * Create canvas for screenshot.\n     * @returns {HTMLCanvasElement} Canvas element\n     */\n    create_canvas() {\n        let c = $.c('canvas');\n        const w = this.jm.view.size.w;\n        const h = this.jm.view.size.h;\n        c.width = w * this.dpr;\n        c.height = h * this.dpr;\n        c.style.width = w + 'px';\n        c.style.height = h + 'px';\n\n        c.style.visibility = 'hidden';\n        this.jm.view.e_panel.appendChild(c);\n        return c;\n    }\n\n    /**\n     * Clean up canvas element.\n     * @param {HTMLCanvasElement} c - Canvas to remove\n     */\n    clear(c) {\n        c.parentNode.removeChild(c);\n    }\n\n    /**\n     * Draw background on canvas.\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\n     * @returns {Promise<CanvasRenderingContext2D>} Promise resolving to context\n     */\n    draw_background(ctx) {\n        return new Promise(\n            function (resolve, _) {\n                const bg = this.options.background;\n                if (!!bg && bg !== 'transparent') {\n                    ctx.fillStyle = this.options.background;\n                    ctx.fillRect(0, 0, this.jm.view.size.w, this.jm.view.size.h);\n                }\n                resolve(ctx);\n            }.bind(this)\n        );\n    }\n\n    /**\n     * Draw connection lines on canvas by copying from view graph.\n     * @param {CanvasRenderingContext2D} ctx\n     * @returns {Promise<CanvasRenderingContext2D>}\n     */\n    draw_lines(ctx) {\n        return new Promise(\n            function (resolve, _) {\n                this.jm.view.graph.copy_to(ctx, function () {\n                    resolve(ctx);\n                });\n            }.bind(this)\n        );\n    }\n\n    /**\n     * Draw node DOM into canvas via SVG snapshot.\n     * @param {CanvasRenderingContext2D} ctx\n     * @returns {Promise<CanvasRenderingContext2D>}\n     */\n    draw_nodes(ctx) {\n        return domtoimage\n            .toSvg(this.jm.view.e_nodes, { style: { zoom: 1 } })\n            .then(this.load_image)\n            .then(function (img) {\n                ctx.drawImage(img, 0, 0);\n                return ctx;\n            });\n    }\n\n    /**\n     * Draw watermark text on canvas.\n     * @param {HTMLCanvasElement} c\n     * @param {CanvasRenderingContext2D} ctx\n     * @returns {CanvasRenderingContext2D}\n     */\n    draw_watermark(c, ctx) {\n        ctx.textBaseline = 'bottom';\n        ctx.fillStyle = '#000';\n        ctx.font = '11px Verdana,Arial,Helvetica,sans-serif';\n        if (!!this.options.watermark.left) {\n            ctx.textAlign = 'left';\n            ctx.fillText(this.options.watermark.left, 5.5, c.height - 2.5);\n        }\n        if (!!this.options.watermark.right) {\n            ctx.textAlign = 'right';\n            ctx.fillText(this.options.watermark.right, c.width - 5.5, c.height - 2.5);\n        }\n        return ctx;\n    }\n\n    /**\n     * Load image from URL and resolve img element.\n     * @param {string} url\n     * @returns {Promise<HTMLImageElement>}\n     */\n    load_image(url) {\n        return new Promise(function (resolve, reject) {\n            let img = new Image();\n            img.onload = function () {\n                resolve(img);\n            };\n            img.onerror = reject;\n            img.src = url;\n        });\n    }\n\n    /**\n     * Trigger download of canvas content as PNG.\n     * @param {HTMLCanvasElement} c\n     */\n    download(c) {\n        var name = (this.options.filename || this.jm.mind.name) + '.png';\n\n        if (navigator.msSaveBlob && !!c.msToBlob) {\n            var blob = c.msToBlob();\n            navigator.msSaveBlob(blob, name);\n        } else {\n            var blob_url = c.toDataURL();\n            var anchor = $.c('a');\n            if ('download' in anchor) {\n                anchor.style.visibility = 'hidden';\n                anchor.href = blob_url;\n                anchor.download = name;\n                $.d.body.appendChild(anchor);\n                var evt = $.d.createEvent('MouseEvents');\n                evt.initEvent('click', true, true);\n                anchor.dispatchEvent(evt);\n                $.d.body.removeChild(anchor);\n            } else {\n                location.href = blob_url;\n            }\n        }\n    }\n}\n\n/**\n * Screenshot plugin registration.\n * @type {import('../jsmind.plugin.js').Plugin<Partial<ScreenshotOptions>>}\n */\nexport const screenshot_plugin = new jsMind.plugin('screenshot', function (jm, options) {\n    var jmss = new JmScreenshot(jm, options);\n    jm.screenshot = jmss;\n    jm.shoot = function () {\n        jmss.shoot();\n    };\n});\n\njsMind.register_plugin(screenshot_plugin);\n\nexport default JmScreenshot;\n"],"names":["jsMind","domtoimage"],"mappings":"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"}