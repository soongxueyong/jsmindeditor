{"version":3,"file":"jsmind.draggable-node.js","sources":["../src/plugins/jsmind.draggable-node.js"],"sourcesContent":["/**\n * @license BSD\n * @copyright 2014-2025 hizzgdev@163.com\n *\n * Project Home:\n *   https://github.com/hizzgdev/jsmind/\n */\n\nimport jsMind from 'jsmind';\n\nif (!jsMind) {\n    throw new Error('jsMind is not defined');\n}\n\nconst $ = jsMind.$;\n\nconst clear_selection =\n    'getSelection' in $.w\n        ? function () {\n              $.w.getSelection().removeAllRanges();\n          }\n        : function () {\n              $.d.selection.empty();\n          };\n\n/**\n * Default options for draggable node plugin.\n * @typedef {Object} DraggableNodeOptions\n * @property {number} [line_width]\n * @property {string} [line_color]\n * @property {string} [line_color_invalid]\n * @property {number} [lookup_delay]\n * @property {number} [lookup_interval]\n * @property {number} [scrolling_trigger_width]\n * @property {number} [scrolling_step_length]\n * @property {string} [shadow_node_class_name]\n */\nconst DEFAULT_OPTIONS = {\n    line_width: 5,\n    line_color: 'rgba(0,0,0,0.3)',\n    line_color_invalid: 'rgba(255,51,51,0.6)',\n    lookup_delay: 200,\n    lookup_interval: 100,\n    scrolling_trigger_width: 20,\n    scrolling_step_length: 10,\n    shadow_node_class_name: 'jsmind-draggable-shadow-node',\n};\n\n/**\n * Draggable node plugin for jsMind.\n */\nexport class DraggableNode {\n    /**\n     * Create draggable node plugin instance.\n     * @param {import('../jsmind.js').default} jm - jsMind instance\n     * @param {Partial<DraggableNodeOptions>} options - Plugin options\n     */\n    constructor(jm, options) {\n        var opts = {};\n        jsMind.util.json.merge(opts, DEFAULT_OPTIONS);\n        jsMind.util.json.merge(opts, options);\n\n        this.version = '0.4.0';\n        /** @type {import('../jsmind.js').default} */\n        this.jm = jm;\n        /** @type {DraggableNodeOptions} */\n        this.options = opts;\n        /** @type {HTMLCanvasElement|null} */\n        this.e_canvas = null;\n        /** @type {CanvasRenderingContext2D|null} */\n        this.canvas_ctx = null;\n        /** @type {HTMLElement|null} */\n        this.shadow = null;\n        /** @type {number} */\n        this.shadow_p_x = 0;\n        /** @type {number} */\n        this.shadow_p_y = 0;\n        /** @type {number} */\n        this.shadow_w = 0;\n        /** @type {number} */\n        this.shadow_h = 0;\n        /** @type {import('../jsmind.node.js').Node|null} */\n        this.active_node = null;\n        /** @type {import('../jsmind.node.js').Node|null} */\n        this.target_node = null;\n        /** @type {number|null} */\n        this.target_direct = null;\n        /** @type {number} */\n        this.client_w = 0;\n        /** @type {number} */\n        this.client_h = 0;\n        /** @type {number} */\n        this.offset_x = 0;\n        /** @type {number} */\n        this.offset_y = 0;\n        /** @type {number} */\n        this.hlookup_delay = 0;\n        /** @type {number} */\n        this.hlookup_timer = 0;\n        /** @type {boolean} */\n        this.capture = false;\n        /** @type {boolean} */\n        this.moved = false;\n        /** @type {boolean} */\n        this.canvas_draggable = jm.get_view_draggable();\n        /** @type {HTMLElement} */\n        this.view_panel = jm.view.e_panel;\n        /** @type {DOMRect|null} */\n        this.view_panel_rect = null;\n    }\n    /** Initialize the draggable node plugin. */\n    init() {\n        this.create_canvas();\n        this.create_shadow();\n        this.event_bind();\n    }\n    /** Resize canvas and shadow elements. */\n    resize() {\n        this.jm.view.e_nodes.appendChild(this.shadow);\n        this.e_canvas.width = this.jm.view.size.w;\n        this.e_canvas.height = this.jm.view.size.h;\n    }\n    /** Create canvas for drawing drag lines. */\n    create_canvas() {\n        var c = $.c('canvas');\n        this.jm.view.e_panel.appendChild(c);\n        var ctx = c.getContext('2d');\n        this.e_canvas = c;\n        this.canvas_ctx = ctx;\n    }\n    create_shadow() {\n        var s = $.c('jmnode');\n        s.style.visibility = 'hidden';\n        s.style.zIndex = '3';\n        s.style.cursor = 'move';\n        s.style.opacity = '0.7';\n        s.className = this.options.shadow_node_class_name;\n        this.shadow = s;\n    }\n    /**\n     * Reset shadow element style and cache its size.\n     * @param {HTMLElement} el - The node element to mirror as shadow\n     */\n    reset_shadow(el) {\n        var s = this.shadow.style;\n        this.shadow.innerHTML = el.innerHTML;\n        s.left = el.style.left;\n        s.top = el.style.top;\n        s.width = el.style.width;\n        s.height = el.style.height;\n        s.backgroundImage = el.style.backgroundImage;\n        s.backgroundSize = el.style.backgroundSize;\n        s.transform = el.style.transform;\n        this.shadow_w = this.shadow.clientWidth;\n        this.shadow_h = this.shadow.clientHeight;\n    }\n    /** Show the shadow element. */\n    show_shadow() {\n        if (!this.moved) {\n            this.shadow.style.visibility = 'visible';\n        }\n    }\n    /** Hide the shadow element. */\n    hide_shadow() {\n        this.shadow.style.visibility = 'hidden';\n    }\n    /**\n     * Draw a helper line between the shadow and target node.\n     * @param {{x:number,y:number}} shadow_p - Shadow anchor point\n     * @param {{x:number,y:number}} node_p - Target node anchor point\n     * @param {boolean} invalid - Whether current target is invalid\n     */\n    magnet_shadow(shadow_p, node_p, invalid) {\n        this.canvas_ctx.lineWidth = this.options.line_width;\n        this.canvas_ctx.strokeStyle = invalid\n            ? this.options.line_color_invalid\n            : this.options.line_color;\n        this.canvas_ctx.lineCap = 'round';\n        this.clear_lines();\n        this.canvas_lineto(shadow_p.x, shadow_p.y, node_p.x, node_p.y);\n    }\n    /** Clear helper lines from canvas. */\n    clear_lines() {\n        this.canvas_ctx.clearRect(0, 0, this.jm.view.size.w, this.jm.view.size.h);\n    }\n    /**\n     * Draw a straight helper line.\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     */\n    canvas_lineto(x1, y1, x2, y2) {\n        this.canvas_ctx.beginPath();\n        this.canvas_ctx.moveTo(x1, y1);\n        this.canvas_ctx.lineTo(x2, y2);\n        this.canvas_ctx.stroke();\n    }\n    /** Bind mouse/touch events for dragging. */\n    event_bind() {\n        var jd = this;\n        var container = this.jm.view.container;\n        $.on(container, 'mousedown', function (e) {\n            if (e.button === 0) {\n                jd.dragstart.call(jd, e);\n            }\n        });\n        $.on(container, 'mousemove', function (e) {\n            if (e.movementX !== 0 || e.movementY !== 0) {\n                jd.drag.call(jd, e);\n            }\n        });\n        $.on(container, 'mouseup', function (e) {\n            jd.dragend.call(jd, e);\n        });\n        $.on(container, 'touchstart', function (e) {\n            jd.dragstart.call(jd, e);\n        });\n        $.on(container, 'touchmove', function (e) {\n            jd.drag.call(jd, e);\n        });\n        $.on(container, 'touchend', function (e) {\n            jd.dragend.call(jd, e);\n        });\n    }\n    /**\n     * Begin dragging interaction.\n     * @param {MouseEvent|TouchEvent} e - Pointer down event\n     */\n    dragstart(e) {\n        if (!this.jm.get_editable()) {\n            return;\n        }\n        if (this.capture) {\n            return;\n        }\n        var jview = this.jm.view;\n        if (jview.is_editing()) {\n            return;\n        }\n        this.active_node = null;\n        this.view_draggable = this.jm.get_view_draggable();\n\n        var el = this.find_node_element(e.target);\n        if (!el) {\n            return;\n        }\n        if (this.view_draggable) {\n            this.jm.disable_view_draggable();\n        }\n        var nodeid = jview.get_binded_nodeid(el);\n        if (!!nodeid) {\n            var node = this.jm.get_node(nodeid);\n            if (!node.isroot) {\n                this.reset_shadow(el);\n                this.view_panel_rect = this.view_panel.getBoundingClientRect();\n                this.active_node = node;\n                this.offset_x =\n                    (e.clientX || e.touches[0].clientX) / jview.zoom_current - el.offsetLeft;\n                this.offset_y =\n                    (e.clientY || e.touches[0].clientY) / jview.zoom_current - el.offsetTop;\n                this.client_hw = Math.floor(el.clientWidth / 2);\n                this.client_hh = Math.floor(el.clientHeight / 2);\n                if (this.hlookup_delay != 0) {\n                    $.w.clearTimeout(this.hlookup_delay);\n                }\n                if (this.hlookup_timer != 0) {\n                    $.w.clearInterval(this.hlookup_timer);\n                }\n                var jd = this;\n                this.hlookup_delay = $.w.setTimeout(function () {\n                    jd.hlookup_delay = 0;\n                    jd.hlookup_timer = $.w.setInterval(function () {\n                        jd.lookup_target_node.call(jd);\n                    }, jd.options.lookup_interval);\n                }, this.options.lookup_delay);\n                jd.capture = true;\n            }\n        }\n    }\n    /**\n     * Drag handler to move shadow and auto-scroll container.\n     * @param {MouseEvent|TouchEvent} e - Pointer move event\n     */\n    drag(e) {\n        if (!this.jm.get_editable()) {\n            return;\n        }\n        if (this.capture) {\n            e.preventDefault();\n            this.show_shadow();\n            this.moved = true;\n            clear_selection();\n            var jview = this.jm.view;\n            var px = (e.clientX || e.touches[0].clientX) / jview.zoom_current - this.offset_x;\n            var py = (e.clientY || e.touches[0].clientY) / jview.zoom_current - this.offset_y;\n            // scrolling container axisY if drag nodes exceeding container\n            if (\n                e.clientY - this.view_panel_rect.top < this.options.scrolling_trigger_width &&\n                this.view_panel.scrollTop > this.options.scrolling_step_length\n            ) {\n                this.view_panel.scrollBy(0, -this.options.scrolling_step_length);\n                this.offset_y += this.options.scrolling_step_length / jview.zoom_current;\n            } else if (\n                this.view_panel_rect.bottom - e.clientY < this.options.scrolling_trigger_width &&\n                this.view_panel.scrollTop <\n                    this.view_panel.scrollHeight -\n                        this.view_panel_rect.height -\n                        this.options.scrolling_step_length\n            ) {\n                this.view_panel.scrollBy(0, this.options.scrolling_step_length);\n                this.offset_y -= this.options.scrolling_step_length / jview.zoom_current;\n            }\n            // scrolling container axisX if drag nodes exceeding container\n            if (\n                e.clientX - this.view_panel_rect.left < this.options.scrolling_trigger_width &&\n                this.view_panel.scrollLeft > this.options.scrolling_step_length\n            ) {\n                this.view_panel.scrollBy(-this.options.scrolling_step_length, 0);\n                this.offset_x += this.options.scrolling_step_length / jview.zoom_current;\n            } else if (\n                this.view_panel_rect.right - e.clientX < this.options.scrolling_trigger_width &&\n                this.view_panel.scrollLeft <\n                    this.view_panel.scrollWidth -\n                        this.view_panel_rect.width -\n                        this.options.scrolling_step_length\n            ) {\n                this.view_panel.scrollBy(this.options.scrolling_step_length, 0);\n                this.offset_x -= this.options.scrolling_step_length / jview.zoom_current;\n            }\n            this.shadow.style.left = px + 'px';\n            this.shadow.style.top = py + 'px';\n            clear_selection();\n        }\n    }\n    /**\n     * Finish dragging, move the node if applicable.\n     * @param {MouseEvent|TouchEvent} e - Pointer up event\n     */\n    dragend(e) {\n        if (!this.jm.get_editable()) {\n            return;\n        }\n        if (this.view_draggable) {\n            this.jm.enable_view_draggable();\n        }\n        if (this.capture) {\n            if (this.hlookup_delay != 0) {\n                $.w.clearTimeout(this.hlookup_delay);\n                this.hlookup_delay = 0;\n                this.clear_lines();\n            }\n            if (this.hlookup_timer != 0) {\n                $.w.clearInterval(this.hlookup_timer);\n                this.hlookup_timer = 0;\n                this.clear_lines();\n            }\n            if (this.moved) {\n                var src_node = this.active_node;\n                var target_node = this.target_node;\n                var target_direct = this.target_direct;\n                this.move_node(src_node, target_node, target_direct);\n            }\n            this.hide_shadow();\n        }\n        this.view_panel_rect = null;\n        this.moved = false;\n        this.capture = false;\n    }\n    /**\n     * Find the closest node element from an event target.\n     * @param {HTMLElement} el - Current DOM element\n     * @returns {HTMLElement|null} Matched node element or null\n     */\n    find_node_element(el) {\n        if (\n            el === this.jm.view.e_nodes ||\n            el === this.jm.view.e_panel ||\n            el === this.jm.view.container\n        ) {\n            return null;\n        }\n        if (el.tagName.toLowerCase() === 'jmnode') {\n            return el;\n        }\n        return this.find_node_element(el.parentNode);\n    }\n    /** Recompute target node under the shadow and draw helper. */\n    lookup_target_node() {\n        let sx = this.shadow.offsetLeft;\n        let sy = this.shadow.offsetTop;\n        if (sx === this.shadow_p_x && sy === this.shadow_p_y) {\n            return;\n        }\n        this.shadow_p_x = sx;\n        this.shadow_p_y = sy;\n\n        let target_direction =\n            this.shadow_p_x + this.shadow_w / 2 >= this.get_root_x()\n                ? jsMind.direction.right\n                : jsMind.direction.left;\n        let overlapping_node = this.lookup_overlapping_node_parent(target_direction);\n        let target_node = overlapping_node || this.lookup_close_node(target_direction);\n        if (!!target_node) {\n            let points = this.calc_point_of_node(target_node, target_direction);\n            let invalid = jsMind.node.inherited(this.active_node, target_node);\n            this.magnet_shadow(points.sp, points.np, invalid);\n            this.target_node = target_node;\n            this.target_direct = target_direction;\n        }\n    }\n    /**\n     * Get X coordinate of root node center.\n     * @returns {number}\n     */\n    get_root_x() {\n        let root = this.jm.get_root();\n        let root_location = root.get_location();\n        let root_size = root.get_size();\n        return root_location.x + root_size.w / 2;\n    }\n\n    /**\n     * Lookup overlapping node's parent near the shadow position.\n     * @param {number} direction - Direction constant\n     * @returns {import('../jsmind.node.js').Node|null}\n     */\n    lookup_overlapping_node_parent(direction) {\n        let shadowRect = this.shadow.getBoundingClientRect();\n        let x = shadowRect.x + (shadowRect.width * (1 - direction)) / 2;\n        let deltaX = (this.jm.options.layout.hspace + this.jm.options.layout.pspace) * direction;\n        let deltaY = shadowRect.height;\n        let points = [\n            [x, shadowRect.y],\n            [x, shadowRect.y + deltaY / 2],\n            [x, shadowRect.y + deltaY],\n            [x + deltaX / 2, shadowRect.y],\n            [x + deltaX / 2, shadowRect.y + deltaY / 2],\n            [x + deltaX / 2, shadowRect.y + deltaY],\n            [x + deltaX, shadowRect.y],\n            [x + deltaX, shadowRect.y + deltaY / 2],\n            [x + deltaX, shadowRect.y + deltaY],\n        ];\n        for (const p of points) {\n            let n = this.lookup_node_parent_by_location(p[0], p[1]);\n            if (!!n) {\n                return n;\n            }\n        }\n    }\n\n    /**\n     * Find node's parent by a screen location.\n     * @param {number} x - Client X\n     * @param {number} y - Client Y\n     * @returns {import('../jsmind.node.js').Node|null}\n     */\n    lookup_node_parent_by_location(x, y) {\n        return $.d\n            .elementsFromPoint(x, y)\n            .filter(\n                x => x.tagName === 'JMNODE' && x.className !== this.options.shadow_node_class_name\n            )\n            .map(el => this.jm.view.get_binded_nodeid(el))\n            .map(id => id && this.jm.mind.nodes[id])\n            .map(n => n && n.parent)\n            .find(n => n);\n    }\n\n    /**\n     * Lookup the closest node along a direction.\n     * @param {number} direction\n     * @returns {import('../jsmind.node.js').Node}\n     */\n    lookup_close_node(direction) {\n        return Object.values(this.jm.mind.nodes)\n            .filter(n => n.direction == direction || n.isroot)\n            .filter(n => this.jm.layout.is_visible(n))\n            .filter(n => this.shadow_on_target_side(n, direction))\n            .map(n => ({ node: n, distance: this.shadow_to_node(n, direction) }))\n            .reduce(\n                (prev, curr) => {\n                    return prev.distance < curr.distance ? prev : curr;\n                },\n                { node: this.jm.get_root(), distance: Number.MAX_VALUE }\n            ).node;\n    }\n\n    /**\n     * Check if shadow is on the target side of a node.\n     * @param {import('../jsmind.node.js').Node} node\n     * @param {number} dir\n     * @returns {boolean}\n     */\n    shadow_on_target_side(node, dir) {\n        return (\n            (dir == jsMind.direction.right && this.shadow_to_right_of_node(node) > 0) ||\n            (dir == jsMind.direction.left && this.shadow_to_left_of_node(node) > 0)\n        );\n    }\n\n    /**\n     * Distance from shadow to the right side of a node.\n     * @param {import('../jsmind.node.js').Node} node\n     * @returns {number}\n     */\n    shadow_to_right_of_node(node) {\n        return this.shadow_p_x - node.get_location().x - node.get_size().w;\n    }\n\n    /**\n     * Distance from shadow to the left side of a node.\n     * @param {import('../jsmind.node.js').Node} node\n     * @returns {number}\n     */\n    shadow_to_left_of_node(node) {\n        return node.get_location().x - this.shadow_p_x - this.shadow_w;\n    }\n\n    /**\n     * Vertical distance between shadow centerline and node centerline.\n     * @param {import('../jsmind.node.js').Node} node\n     * @returns {number}\n     */\n    shadow_to_base_line_of_node(node) {\n        return this.shadow_p_y + this.shadow_h / 2 - node.get_location().y - node.get_size().h / 2;\n    }\n\n    /**\n     * Manhattan distance to a node along a direction.\n     * @param {import('../jsmind.node.js').Node} node\n     * @param {number} dir\n     * @returns {number}\n     */\n    shadow_to_node(node, dir) {\n        let distance_x =\n            dir === jsMind.direction.right\n                ? Math.abs(this.shadow_to_right_of_node(node))\n                : Math.abs(this.shadow_to_left_of_node(node));\n        let distance_y = Math.abs(this.shadow_to_base_line_of_node(node));\n        return distance_x + distance_y;\n    }\n\n    /**\n     * Calculate connection points of a node and the shadow.\n     * @param {import('../jsmind.node.js').Node} node\n     * @param {number} dir\n     * @returns {{sp:{x:number,y:number}, np:{x:number,y:number}}}\n     */\n    calc_point_of_node(node, dir) {\n        let ns = node.get_size();\n        let nl = node.get_location();\n        let node_x = node.isroot\n            ? nl.x + ns.w / 2\n            : nl.x + (ns.w * (1 + dir)) / 2 + this.options.line_width * dir;\n        let node_y = nl.y + ns.h / 2;\n        let shadow_x =\n            this.shadow_p_x + (this.shadow_w * (1 - dir)) / 2 - this.options.line_width * dir;\n        let shadow_y = this.shadow_p_y + this.shadow_h / 2;\n        return {\n            sp: { x: shadow_x, y: shadow_y },\n            np: { x: node_x, y: node_y },\n        };\n    }\n\n    /**\n     * Move a node to a new parent/position.\n     * @param {import('../jsmind.node.js').Node} src_node\n     * @param {import('../jsmind.node.js').Node|null} target_node\n     * @param {number|null} target_direct\n     */\n    move_node(src_node, target_node, target_direct) {\n        var shadow_h = this.shadow.offsetTop;\n        if (!!target_node && !!src_node && !jsMind.node.inherited(src_node, target_node)) {\n            // lookup before_node\n            var sibling_nodes = target_node.children;\n            var sc = sibling_nodes.length;\n            var node = null;\n            var delta_y = Number.MAX_VALUE;\n            var node_before = null;\n            var beforeid = '_last_';\n            while (sc--) {\n                node = sibling_nodes[sc];\n                if (node.direction == target_direct && node.id != src_node.id) {\n                    var dy = node.get_location().y - shadow_h;\n                    if (dy > 0 && dy < delta_y) {\n                        delta_y = dy;\n                        node_before = node;\n                        beforeid = '_first_';\n                    }\n                }\n            }\n            if (!!node_before) {\n                beforeid = node_before.id;\n            }\n            this.jm.move_node(src_node.id, beforeid, target_node.id, target_direct);\n        }\n        this.active_node = null;\n        this.target_node = null;\n        this.target_direct = null;\n    }\n    /**\n     * Handle jsMind events.\n     * @param {number|string} type - Event type\n     * @param {object} [data] - Event data\n     */\n    jm_event_handle(type, data) {\n        if (type === jsMind.event_type.resize) {\n            this.resize();\n        }\n    }\n}\n\n/**\n * Draggable node plugin registration.\n * @type {import('../jsmind.plugin.js').Plugin<Partial<DraggableNodeOptions>>}\n */\nexport const draggable_plugin = new jsMind.plugin('draggable_node', function (jm, options) {\n    var jd = new DraggableNode(jm, options);\n    jd.init();\n    jm.add_event_listener(function (type, data) {\n        jd.jm_event_handle.call(jd, type, data);\n    });\n});\n\njsMind.register_plugin(draggable_plugin);\n\nexport default DraggableNode;\n"],"names":["jsMind"],"mappings":"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"}